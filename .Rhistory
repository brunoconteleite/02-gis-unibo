options(htmltools.dir.version = FALSE)
# a boring regression
fit = lm(dist ~ 1 + speed, data = cars)
coef(summary(fit))
dojutsu = c('地爆天星', '天照', '加具土命', '神威', '須佐能乎', '無限月読')
grep('天', dojutsu, value = TRUE)
par(mar = c(4, 4, 1, .1))
plot(cars, pch = 19, col = 'darkgray', las = 1)
abline(fit, lwd = 2)
knitr::kable(head(iris), format = 'html')
library(xaringanthemer)
xaringan:::karl
df.airqual <- data.table(airquality)
library(data.table)
df.airqual <- data.table(airquality)
# Example of data operations: merging datasets
df.months <- data.table(Month = 1:12, month.text = month.name)
df.airqual
df.months
options(htmltools.dir.version = FALSE)
# library(xaringanthemer)
# # style_mono_accent(
# #   base_color = "#1c5253"
# #   # header_font_google = google_font("Josefin Sans"),
# #   # text_font_google   = google_font("Montserrat", "300", "300i"),
# #   # code_font_google   = google_font("Fira Mono")
# # )
# # style_xaringan(link_color = 'red')
# style_xaringan(
#   text_font_family = "Droid Serif",
#   text_font_url = "https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic",
#   header_font_google = google_font("Yanone Kaffeesatz")
# )
# other colors:
# blue: rgb(0,114,178)
# orange: rgb(213,94,0)
# green: rgb(0,158,115)
library(data.table)
library(dplyr)
library(ggplot2)
airquality
c(1,3:5,7:10)
library(data.table)
library(dplyr)
datasets::AirPassengers
df.airqual <- data.table(airquality)
# Example of data operations: merging datasets
df.months <- data.table(Month = 1:12, month.text = month.name)
merge.data.table(df.airqual,df.months)
df.merged <- merge.data.table(df.airqual,df.months)
# Example 2: tidyverse library
# This is the most comprehensive, complete library
# of data sciences tools in R:
# https://www.tidyverse.org/
library(dplyr)
# Uses the "pipe" syntax (%>%)
# https://style.tidyverse.org/pipes.html
# Merging:
df.merged <- df.airqual %>%
left_join(df.months)
# Tibbles - class of tidyverse data frames:
df.merged <- tibble(df.merged)
df.merged # Better way of visualizing data frames.
# Selecting specific variables:
df.merged %>%
select(month.text, Day, Wind)
# Filtering a dataset:
df.merged %>%
filter(Month==5)
# Combining operations:
df.merged %>%
filter(month.text=='August') %>%
select(Month,Day,Ozone)
fwrite(x = df.merged,file = 'merge_dataset.csv', sep = '\t')
setwd("~/Desktop/")
fwrite(x = df.merged,file = 'merge_dataset.csv', sep = '\t')
library(haven)
save(df.merged,file = 'merged_dataset.rdata')
# My advise: always export data in csv with 'tab' separator:
fwrite(x = df.merged,file = 'merged_dataset.csv', sep = '\t')
# if you like Stata files:
library(haven)
write_dta(data = df.merged, path = 'merged_dataset.dta')
df.merged
names(df.merged)
tolower(names(df.merged))
gsub('\\.', '_',tolower(names(df.merged)))
library(haven)
# Importantly: Stata does not allow for '.' or other
# symbols in the column names. Replace them with '_':
setnames(df.merged, gsub('\\.', '_',tolower(names(df.merged))))
# Exporting it:
write_dta(data = df.merged, path = 'merged_dataset.dta')
df.ex <- tibble(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type))
library(ggplot2)
df.ex <- tibble(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type))
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type)) +
theme_bw()
datasets::state.x77
df.ex <- tibble(datasets::state.x77)
df.ex
df.ex <- data.table(datasets::state.x77)
df.ex
df.ex <- data.table(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type)) +
theme_bw()
df.ex <- data.table(datasets::state.x77)
head(df.ex)
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder))
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = (Income>median(Income))))
df.ex %>%
mutate(high.inc = Income>median(Income))
df.ex <- df.ex %>%
mutate(high.inc = Income>median(Income))
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.inc))
df.ex
head(df.ex)
df.ex <- data.table(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type)) +
theme_bw()
df.ex <- data.table(datasets::state.x77)
df.ex <- df.ex %>%
mutate(high.dens = Income>median(Population/Area))
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens))
df.ex <- data.table(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type)) +
theme_bw()
df.ex <- data.table(datasets::state.x77)
df.ex <- df.ex %>%
mutate(high.dens = (Population/Area)>median(Population/Area))
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens))
df.ex <- data.table(datasets::CO2)
head(df.ex)
df.ex <- data.table(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(conc, fill=Type)) +
theme_bw()
df.ex <- data.table(datasets::CO2)
ggplot(df.ex) +
geom_histogram(aes(uptake, fill=Type)) +
theme_bw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_light()
df.ex <- data.table(datasets::state.x77)
df.ex <- df.ex %>%
mutate(high.dens = (Population/Area)>median(Population/Area))
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_light()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_bw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_dark()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_get()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_void()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_grey()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_linedraw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
theme_minimal()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder)) +
theme_bw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder, color = high.dens)) +
theme_bw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder, color = high.dens),method = 'lm') +
theme_bw()
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder)) +
theme_bw()
df.ex <- df.ex %>%
select(Income<6000)
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder)) +
theme_bw()
df.ex <- df.ex %>%
filter(Income<6000)
ggplot(df.ex) +
geom_point(mapping = aes(Income, Murder, color = high.dens)) +
geom_smooth(mapping = aes(Income, Murder)) +
theme_bw()
dev.off()
rm(list = ls())
