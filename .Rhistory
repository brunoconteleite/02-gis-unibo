#> -180.0  -89.9  180.0   83.6
random_df = data.frame(
x = runif(n = 10, min = bb[1], max = bb[3]),
y = runif(n = 10, min = bb[2], max = bb[4])
)
random_points = random_df %>%
st_as_sf(coords = c("x", "y"))  %>%  # set coordinates
st_set_crs("EPSG:4326") # set geographic CRS
rm(random_df)
# Generating a random SF points:
set.seed(2018) # set seed for reproducibility
(bb = st_bbox(world)) # the world's bounds
#>   xmin   ymin   xmax   ymax
#> -180.0  -89.9  180.0   83.6
random_df = data.frame(
x = runif(n = 10, min = bb[1], max = bb[3]),
y = runif(n = 10, min = bb[2], max = bb[4])
)
rm(bb)
sf.random_points = random_df %>%
st_as_sf(coords = c("x", "y"))  %>%  # set coordinates
st_set_crs("EPSG:4326") # set geographic CRS
rm(random_df)
# Generating a random SF points:
set.seed(2018) # set seed for reproducibility
bb <- st_bbox(world) # the world's bounds
#>   xmin   ymin   xmax   ymax
#> -180.0  -89.9  180.0   83.6
random_df <- data.frame(
x = runif(n = 10, min = bb[1], max = bb[3]),
y = runif(n = 10, min = bb[2], max = bb[4])
)
rm(bb)
sf.random_points <- random_df %>%
st_as_sf(coords = c("x", "y"))  %>%  # set coordinates
st_set_crs("EPSG:4326") # set geographic CRS
rm(random_df)
ggplot() +
geom_sf(data = world) +
geom_sf(data = sf.random_points)
sf.random_points
names(world)
sf.points.merged <- sf.random_points %>%
st_join(world)
world
sf.random_points
sf.points.merged
ggplot() +
geom_sf(data = world) +
geom_sf(data = sf.random_points, aes(fill=name_long))
ggplot() +
geom_sf(data = world) +
geom_sf(data = sf.points.merged, aes(fill=name_long))
ggplot() +
geom_sf(data = world) +
geom_sf(data = sf.points.merged, aes(color=name_long))
sf.random_points %>%
st_join(world,join = st_covers)
sf.disj.1 <- cycle_hire
sf.disj.2 <- cycle_hire_osm
ggplot() +
geom_sf(data = sf.disj.1) +
geom_sf(data = sf.disj.2,color='red', alpha=.5)
st_touches(sf.disj.1,sf.disj.2,sparse = F)
any(st_touches(sf.disj.1,sf.disj.2,sparse = F))
st_is_within_distance(cycle_hire, cycle_hire_osm,
dist = units::set_units(20, "m"))
sel <- st_is_within_distance(cycle_hire, cycle_hire_osm,
dist = units::set_units(20, "m"))
sel
sel[1:50]
sel[100:150]
sel <- st_is_within_distance(cycle_hire, cycle_hire_osm,
dist = units::set_units(20, "m"),sparse = F)
dim(sel)
logical.dist <- st_is_within_distance(cycle_hire, cycle_hire_osm,
dist = units::set_units(20, "m"))
logical.dist
logical.dist[100:150]
nrow(sf.disj.1)
nrow(sf.disj.2)
sf.disjoint.joined <- st_join(
sf.disj.1,
sf.disj.2,
st_is_within_distance,
dist = units::set_units(20, "m")
)
sf.disjoint.joined
nrow(sf.disj.1)
nrow(sf.disj.2)
nrow(sf.disjoint.joined)
sf.world <- world %>% filter(!is.na(iso_a2))
df.wb <- worldbank_df %>% filter(!is.na(iso_a2))
sf.merged <- sf.world %>%
left_join(df.wb) %>%
filter(continent %in% c('North America', 'South America')) %>%
mutate(urban_rate = (urban_pop/pop)*100)%>%
group_by(subregion) %>%
summarise(av_lit = mean(literacy,na.rm=T))
p<-ggplot(sf.merged) +
geom_sf(aes(fill=av_lit)) +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
p
sf.merged <- sf.world %>%
left_join(df.wb) %>%
filter(continent %in% c('North America', 'South America'))
group_by(subregion) %>%
summarise(total_urban = sum(urban_pop,na.rm=T), total_pop = sum(pop,na.rm=T)) %>%
mutate(urban_rate = total_urban/total_pop)
sf.merged <- sf.world %>%
left_join(df.wb) %>%
filter(continent %in% c('North America', 'South America')) %>%
group_by(subregion) %>%
summarise(total_urban = sum(urban_pop,na.rm=T), total_pop = sum(pop,na.rm=T)) %>%
mutate(urban_rate = total_urban/total_pop)
sf.merged
p<-ggplot(sf.merged) +
geom_sf(aes(fill=urban_rate)) +
scale_fill_binned() +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
p
p<-ggplot(sf.merged) +
geom_sf(aes(fill=urban_rate)) +
scale_fill_distiller(palette = 'Spectral') +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40")
p
p<-ggplot(sf.merged) +
geom_sf(aes(fill=urban_rate)) +
scale_fill_distiller(palette = 'Spectral')
p
p<-ggplot(sf.merged) +
geom_sf(aes(fill=urban_rate)) +
scale_fill_distiller(palette = 'Spectral') +
coord_sf(crs = "+proj=laea +x_0=0 +y_0=0 +lon_0=-74 +lat_0=40") +
theme_bw()
p
sf.great.london <- ldn
sf.great.london <- lnd
sf.great.london <- lnd
sf.bikes <- cycle_hire
sf.great.london
sf.bikes
names(sf.great.london)
rm(list = ls())
sf.great.london <- lnd
sf.bikes <- cycle_hire
names(sf.great.london)
names(sf.bikes)
sf.bikes
sf.filtered <- sf.great.london %>%
st_filter(sf.bikes)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes)
sf.great.london
sf.bike.join <- sf.bikes %>%
st_join(sf.great.london)
nrow(sf.bike.join)
nrow(sf.bike)
nrow(sf.bikes)
sf.bike.join
names(sf.great.london)
names(sf.bikes)
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(NAME = name_london)
sf.bikes <- sf.bikes %>%
rename(name = name_bike)
# Spatial filtering:
sf.filtered <- sf.great.london %>%
st_filter(sf.bikes)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes)
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(name_london = NAME)
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(name_london = NAME)
sf.bikes <- sf.bikes %>%
rename(name_bike = name)
# Spatial filtering:
sf.filtered <- sf.great.london %>%
st_filter(sf.bikes)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes)
sf.bike.join <- sf.bikes %>%
st_join(sf.great.london)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes, aes(color = name_london))
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(name_london = NAME)
sf.bikes <- sf.bikes %>%
rename(name_bike = name)
# Spatial filtering:
sf.filtered <- sf.great.london %>%
st_filter(sf.bikes)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes)
# Spatial join:
sf.bike.join <- sf.bikes %>%
st_join(sf.great.london)
sf.bike.join
rm(list = ls())
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(name_london = NAME)
sf.bikes <- sf.bikes %>%
rename(name_bike = name)
# Spatial filtering:
sf.filtered <- sf.great.london %>%
st_filter(sf.bikes)
sf.bikes.join <- sf.bikes %>%
st_join(sf.great.london)
ggplot() +
geom_sf(data = sf.filtered) +
geom_sf(data = sf.bikes.join, aes(color = name_london))
sf.bikes.join %>% filter(is.na(name_london))
sf.bikes.join <- sf.bikes %>%
st_join(sf.great.london, join = st_within)
sf.bikes.join %>% filter(is.na(name_london))
sf.bikes.join <- sf.bikes %>%
st_join(sf.great.london, join = st_overlaps)
sf.bikes.join %>% filter(is.na(name_london))
sf.bikes.join <- sf.bikes %>%
st_join(sf.great.london, join = st_covered_by)
sf.bikes.join %>% filter(is.na(name_london))
rm(list = ls())
sf.great.london <- lnd
sf.bikes <- cycle_hire
# Watch out with names:
names(sf.great.london)
names(sf.bikes)
sf.great.london <- sf.great.london %>%
rename(name_london = NAME)
sf.bikes <- sf.bikes %>%
rename(name_bike = name)
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes)
nrow(sf.great.london)
nrow(sf.glnd.join)
sf.great.london
sf.bikes
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
summarize(total_bikes = sum(nbikes))
sf.glnd.join
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
summarize(total_bikes = sum(nbikes,na.rm = T))
sf.glnd.join
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
summarize(total_bikes = sum(nbikes,na.rm = T))
sf.bikes
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
summarize(
total_bikes = sum(nbikes,na.rm = T),
total_empty = sum(nempty,na.rm = T)
)
sf.glnd.join
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
tally()
sf.glnd.join
sf.glnd.join[1:50]
sf.glnd.join[1:50,]
data.frame(st_drop_geometry(sf.glnd.join[1:50,]))
sf.glnd.join <- sf.great.london %>%
st_join(sf.bikes) %>%
group_by(name_london) %>%
summarize(
total_bikes = sum(nbikes,na.rm = T),
total_empty = sum(nempty,na.rm = T)
)
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes))
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes)) +
scale_fill_distiller(palette = 'Magma')
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes)) +
scale_fill_distiller(palette = 'RdBu')
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes)) +
scale_fill_distiller(palette = 'Spectral')
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes)) +
scale_fill_distiller(name = 'Total\nbikes')
ggplot() +
geom_sf(data = sf.glnd.join, aes(fill=total_bikes)) +
scale_fill_distiller(name = 'Total\nbikes',direction = 1)
rm(list = ls())
dev.off()
library(sf) # simple features' library
library(spData) # library of spatial datasets
library(tidyverse) # dplyr, ggplot, ...
sf.river <- seine
names(world)
world %>% filter(iso_a2=='FR')
ggplot() +
geom_sf(data = world %>% filter(iso_a2=='FR')) +
geom_sf(data = sf.river)
sf.river
plot(sf.river)
sf.river.simple <- st_simplify(
sf.river,
dTolerance = 2000 # tolerance is in meters!
)
plot(st_geometry(sf.river.simple),add=T)
plot(st_geometry(sf.river))
plot(st_geometry(sf.river.simple),add=T)
plot(st_geometry(sf.river))
graphics.off()
dev.off()
plot(st_geometry(sf.river))
plot(st_geometry(sf.river.simple))
sf.river.simple <- st_simplify(
sf.river,
dTolerance = 1000 # tolerance is in meters!
)
plot(st_geometry(sf.river.simple))
dev.off()
graphics.off()
rm(sf.river.simple)
sf.usstates <- us_states
plot(st_geometry(sf.usstates))
graphics.off()
sf.us.centroids <- st_centroid(sf.usstates)
sf.usstates
sf.us.centroids
names(sf.usstates)
names(sf.us.centroids)
ggplot() +
geom_sf(data = sf.usstates) +
geom_sf(data = sf.us.centroids, color = 'Centroids', shape = 1)
ggplot() +
geom_sf(data = sf.usstates) +
geom_sf(data = sf.us.centroids, aes(color = 'Centroids'), shape = 1)
ggplot() +
geom_sf(data = sf.usstates) +
geom_sf(data = sf.us.centroids, aes(color = 'Centroids'), shape = 16)
ggplot() +
geom_sf(sf.river) +
geom_sf(st_centroid(sf.river))
ggplot() +
geom_sf(data = sf.river) +
geom_sf(data = st_centroid(sf.river))
ggplot() +
geom_sf(data = sf.river) +
geom_sf(data = st_centroid(sf.river), shape = 3)
sf.river.centroid.surface <- st_point_on_surface(sf.river)
ggplot() +
geom_sf(data = sf.river) +
geom_sf(data = st_centroid(sf.river), shape = 3) +
geom_sf(data = sf.river.centroid.surface, shape = 3, color='tomato')
ggplot() +
geom_sf(data = sf.river) +
geom_sf(data = st_centroid(sf.river), shape = 3) +
geom_sf(data = sf.river.centroid.surface, shape = 3, color='red')
sf.river.buffer <- st_buffer(
sf.river,
dist = 5000 # 5 km (distance is in meters!)
)
sf.river.buffer
ggplot() +
geom_sf(data = sf.river) +
geom_sf(data = sf.river.buffer, aes(fill=name), alpha=.5) +
theme_bw()
sf.river.shift <- sf.river + c(0,50000) # c(long,lat): thus 50 km up
sfc.river <- st_geometry(sf.river)
sfc.river
sfc.river.shift <- sfc.river + c(0,50000) # c(long,lat): thus 50 km up
sfc.river.shift
ggplot() +
geom_sf(sfc.river) +
geom_sf(sfc.river.shift)
ggplot() +
geom_sf(data = sfc.river) +
geom_sf(data = sfc.river.shift)
sfc.river
sfc.river.shift
ggplot() +
geom_sf(data = st_transform(sfc.river,crs = 'EPSG:4326')) +
geom_sf(data = st_transform(sfc.river.shift,crs = 'EPSG:4326'))
sfc.river.shift
sfc.river.shift <- st_sfc(sfc.river.shift,crs = 'EPSG:4326')
sfc.river.shift
sfc.river <- st_transform(sfc.river,crs = 'EPSG:4326')
sfc.river
ggplot() +
geom_sf(data = sfc.river) +
geom_sf(data = sfc.river.shift)
sfc.river <- st_geometry(sf.river)
sfc.river.shift <- sfc.river + c(0,500) # c(long,lat): thus 50 km up
sfc.river.shift <- st_sfc(sfc.river.shift,crs = 'EPSG:4326')
sfc.river <- st_transform(sfc.river,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sfc.river) +
geom_sf(data = sfc.river.shift)
sfc.river <- st_geometry(sf.river)
sfc.river <- st_transform(sfc.river,crs = 'EPSG:4326')
sfc.river.shift <- sfc.river + c(0,5000) # c(long,lat): thus 50 km up
sfc.river.shift <- st_sfc(sfc.river.shift,crs = 'EPSG:4326')
ggplot() +
geom_sf(data = sfc.river) +
geom_sf(data = sfc.river.shift)
sfc.river <- st_geometry(st_transform(sf.river,crs = 'EPSG:4326'))
sfc.river
sfc.river.shift <- sfc.river + c(0,2000) # c(long,lat): thus 50 km up
sfc.river.shift
sfc.river
sfc.river.shift <- st_sfc(sfc.river.shift,crs = 'EPSG:4326')
sfc.river
sfc.river.shift
sf.circles <- st_centroid(seine) %>%
st_buffer(dist=2000)
ggplot(sf.circles) + geom_sf()
sf.circles <- st_centroid(seine) %>%
st_buffer(dist=200000)
ggplot(sf.circles) + geom_sf()
sf.circles <- st_centroid(seine) %>%
st_buffer(dist=100000)
ggplot(sf.circles) + geom_sf()
ggplot(sf.circles) +
geom_sf(fill=NA)
sf.circles
sf.circle.1 <- sf.circles[1,]
sf.circles
sf.circles.1
sf.circle.1
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
theme_bw()
sf.circle.2 <- sf.circles[2,]
sf.circle.1 <- sf.circles[1,]
sf.circle.2 <- sf.circles[2,]
sf.intersection <- st_intersection(
sf.circle.1,
sf.circle.2
)
sf.intersection
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.intersection, fill='grey',alpha=.5) +
theme_bw()
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.intersection, aes(fill='Intersection'),alpha=.75) +
theme_bw()
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.intersection, aes(fill='Intersection'),alpha=.95) +
theme_bw()
sf.difference <- st_difference(
sf.circle.1,
sf.circle.2
)
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.intersection, aes(fill='Difference'),alpha=.95) +
theme_bw()
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.difference, aes(fill='Difference'),alpha=.95) +
theme_bw()
sf.usstates <- us_states
sf.union <- st_union(
sf.circle.1,
sf.circle.2
)
sf.union <- st_union(
sf.circle.1,
sf.circle.2
)
ggplot() +
geom_sf(data = sf.circles, aes(fill=name),alpha=.5) +
geom_sf(data = sf.union, aes(fill='Union'),alpha=.95) +
theme_bw()
rm(list = ls())
graphics.off()
